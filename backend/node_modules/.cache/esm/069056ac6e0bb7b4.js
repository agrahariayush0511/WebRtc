let jwt,JWT_ACCESS_SECRET,JWT_REFRESH_SECRET;_6e0‍.x([["default",()=>_6e0‍.o]]);_6e0‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);_6e0‍.w("../config",[["JWT_ACCESS_SECRET",["JWT_ACCESS_SECRET"],function(v){JWT_ACCESS_SECRET=v}],["JWT_REFRESH_SECRET",["JWT_REFRESH_SECRET"],function(v){JWT_REFRESH_SECRET=v}]]);


class TokenService {
    generateTokens (payload) {
        const accessToken = jwt.sign(payload,JWT_ACCESS_SECRET , {
            expiresIn: '1h'
        })

        const refreshToken = jwt.sign(payload,JWT_REFRESH_SECRET , {
            expiresIn: '1y'
        })

        return {accessToken, refreshToken}
    }

}

_6e0‍.d(new TokenService());